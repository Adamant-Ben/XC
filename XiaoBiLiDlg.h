
// XiaoBiLiDlg.h : 头文件
//

#pragma once
#include "Cpage0.h"
#include "Cpage1.h"
#include "Cpage2.h"
#include "Cpage3.h"
#include "Page4.h"
#include "SessionSocket.h"
#include "ListenSocket.h"
#include "mscomm1.h"
#include "packetProc.h"
#include "Cpage_config_ydgh.h"
#include "Page_cspz_yj.h"
#include "Page_cspz_yj_2.h"
#include "Cpage_cspz_yj_3.h"
#include "Page_test.h"
#include "Page_SCH.h"
#include <fstream>


class CPage_ljdd;
class CPage_test;
class CPage_nau_config;
class CPag_Password;
class CRwyzDlg;

struct Data_SCH_R10
	{
		unsigned char head1;
		unsigned short head2;
		char workingStage; 
		char workingMode;  
		char powerSwitch;   //switch operation of POCU, 0 for off, 
	                   //1 for on; bit0->QF1, bit1->QF7,bit2->QF8, 
	                   //bit3->QF9, bit4->QF10, bit5->thruster switch
		char cameraSwitch;  //bit0->camera1, bit1->camera2, bit2->camera3
		short thrusterSpeedCmd;  //-1000~1000->-100%~100%
		//发送给基础控制单元的指令
		short trimCmd;                  //纵倾调节指令, 0~1600->4~20mA
		short fairwaterRudderAngle;      //围壳舵舵角控制指令,-300~300->-30度~30度
		short rudderAngle;               //方向舵舵角控制指令,-300~300->-30度~30度
		short leftRearRudderAngle;       //左艉升降舵舵角控制指令,-300~300->-30度~30度
		short rightRearRudderAngle;      //右艉升降舵舵角控制指令,-300~300->-30度~30度
		char electricPushRodCmd;      //电推杆电机启停指令
		char emergencyEnable;          //应急干预使能，0->不干预，1->干预
		char emergencyCmd;             //应急措施命令字bit0->停机，bit1->上浮，bit2->气囊充气，bit3->应急缆释放
	};



typedef union
{
	short s;
	BYTE by[2];
}shortAndByte;

static unsigned char CRCHi_table[256] = 
{
0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,
0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,
0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,
0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
0x80, 0x41, 0x00, 0xC1, 0x81, 0x40
};

//CRC16位校验，低字节校验表
static unsigned char CRCLo_table[256]  = 
{
0x00, 0xC0, 0xC1, 0x01, 0xC3, 0x03, 0x02, 0xC2, 0xC6, 0x06,
0x07, 0xC7, 0x05, 0xC5, 0xC4, 0x04, 0xCC, 0x0C, 0x0D, 0xCD,
0x0F, 0xCF, 0xCE, 0x0E, 0x0A, 0xCA, 0xCB, 0x0B, 0xC9, 0x09,
0x08, 0xC8, 0xD8, 0x18, 0x19, 0xD9, 0x1B, 0xDB, 0xDA, 0x1A,
0x1E, 0xDE, 0xDF, 0x1F, 0xDD, 0x1D, 0x1C, 0xDC, 0x14, 0xD4,
0xD5, 0x15, 0xD7, 0x17, 0x16, 0xD6, 0xD2, 0x12, 0x13, 0xD3,
0x11, 0xD1, 0xD0, 0x10, 0xF0, 0x30, 0x31, 0xF1, 0x33, 0xF3,
0xF2, 0x32, 0x36, 0xF6, 0xF7, 0x37, 0xF5, 0x35, 0x34, 0xF4,
0x3C, 0xFC, 0xFD, 0x3D, 0xFF, 0x3F, 0x3E, 0xFE, 0xFA, 0x3A,
0x3B, 0xFB, 0x39, 0xF9, 0xF8, 0x38, 0x28, 0xE8, 0xE9, 0x29,
0xEB, 0x2B, 0x2A, 0xEA, 0xEE, 0x2E, 0x2F, 0xEF, 0x2D, 0xED,
0xEC, 0x2C, 0xE4, 0x24, 0x25, 0xE5, 0x27, 0xE7, 0xE6, 0x26,
0x22, 0xE2, 0xE3, 0x23, 0xE1, 0x21, 0x20, 0xE0, 0xA0, 0x60,
0x61, 0xA1, 0x63, 0xA3, 0xA2, 0x62, 0x66, 0xA6, 0xA7, 0x67,
0xA5, 0x65, 0x64, 0xA4, 0x6C, 0xAC, 0xAD, 0x6D, 0xAF, 0x6F,
0x6E, 0xAE, 0xAA, 0x6A, 0x6B, 0xAB, 0x69, 0xA9, 0xA8, 0x68,
0x78, 0xB8, 0xB9, 0x79, 0xBB, 0x7B, 0x7A, 0xBA, 0xBE, 0x7E,
0x7F, 0xBF, 0x7D, 0xBD, 0xBC, 0x7C, 0xB4, 0x74, 0x75, 0xB5,
0x77, 0xB7, 0xB6, 0x76, 0x72, 0xB2, 0xB3, 0x73, 0xB1, 0x71,
0x70, 0xB0, 0x50, 0x90, 0x91, 0x51, 0x93, 0x53, 0x52, 0x92,
0x96, 0x56, 0x57, 0x97, 0x55, 0x95, 0x94, 0x54, 0x9C, 0x5C,
0x5D, 0x9D, 0x5F, 0x9F, 0x9E, 0x5E, 0x5A, 0x9A, 0x9B, 0x5B,
0x99, 0x59, 0x58, 0x98, 0x88, 0x48, 0x49, 0x89, 0x4B, 0x8B,
0x8A, 0x4A, 0x4E, 0x8E, 0x8F, 0x4F, 0x8D, 0x4D, 0x4C, 0x8C,
0x44, 0x84, 0x85, 0x45, 0x87, 0x47, 0x46, 0x86, 0x82, 0x42,
0x43, 0x83, 0x41, 0x81, 0x80, 0x40
};
static unsigned char auchCRCHi[]={
0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,
0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,
0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,
0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
0x80, 0x41, 0x00, 0xC1, 0x81, 0x40
};
static unsigned char auchCRCLo[]={
0x00, 0xC0, 0xC1, 0x01, 0xC3, 0x03, 0x02, 0xC2, 0xC6, 0x06,
0x07, 0xC7, 0x05, 0xC5, 0xC4, 0x04, 0xCC, 0x0C, 0x0D, 0xCD,
0x0F, 0xCF, 0xCE, 0x0E, 0x0A, 0xCA, 0xCB, 0x0B, 0xC9, 0x09,
0x08, 0xC8, 0xD8, 0x18, 0x19, 0xD9, 0x1B, 0xDB, 0xDA, 0x1A,
0x1E, 0xDE, 0xDF, 0x1F, 0xDD, 0x1D, 0x1C, 0xDC, 0x14, 0xD4,
0xD5, 0x15, 0xD7, 0x17, 0x16, 0xD6, 0xD2, 0x12, 0x13, 0xD3,
0x11, 0xD1, 0xD0, 0x10, 0xF0, 0x30, 0x31, 0xF1, 0x33, 0xF3,
0xF2, 0x32, 0x36, 0xF6, 0xF7, 0x37, 0xF5, 0x35, 0x34, 0xF4,
0x3C, 0xFC, 0xFD, 0x3D, 0xFF, 0x3F, 0x3E, 0xFE, 0xFA, 0x3A,
0x3B, 0xFB, 0x39, 0xF9, 0xF8, 0x38, 0x28, 0xE8, 0xE9, 0x29,
0xEB, 0x2B, 0x2A, 0xEA, 0xEE, 0x2E, 0x2F, 0xEF, 0x2D, 0xED,
0xEC, 0x2C, 0xE4, 0x24, 0x25, 0xE5, 0x27, 0xE7, 0xE6, 0x26,
0x22, 0xE2, 0xE3, 0x23, 0xE1, 0x21, 0x20, 0xE0, 0xA0, 0x60,
0x61, 0xA1, 0x63, 0xA3, 0xA2, 0x62, 0x66, 0xA6, 0xA7, 0x67,
0xA5, 0x65, 0x64, 0xA4, 0x6C, 0xAC, 0xAD, 0x6D, 0xAF, 0x6F,
0x6E, 0xAE, 0xAA, 0x6A, 0x6B, 0xAB, 0x69, 0xA9, 0xA8, 0x68,
0x78, 0xB8, 0xB9, 0x79, 0xBB, 0x7B, 0x7A, 0xBA, 0xBE, 0x7E,
0x7F, 0xBF, 0x7D, 0xBD, 0xBC, 0x7C, 0xB4, 0x74, 0x75, 0xB5,
0x77, 0xB7, 0xB6, 0x76, 0x72, 0xB2, 0xB3, 0x73, 0xB1, 0x71,
0x70, 0xB0, 0x50, 0x90, 0x91, 0x51, 0x93, 0x53, 0x52, 0x92,
0x96, 0x56, 0x57, 0x97, 0x55, 0x95, 0x94, 0x54, 0x9C, 0x5C,
0x5D, 0x9D, 0x5F, 0x9F, 0x9E, 0x5E, 0x5A, 0x9A, 0x9B, 0x5B,
0x99, 0x59, 0x58, 0x98, 0x88, 0x48, 0x49, 0x89, 0x4B, 0x8B,
0x8A, 0x4A, 0x4E, 0x8E, 0x8F, 0x4F, 0x8D, 0x4D, 0x4C, 0x8C,
0x44, 0x84, 0x85, 0x45, 0x87, 0x47, 0x46, 0x86, 0x82, 0x42,
0x43, 0x83, 0x41, 0x81, 0x80, 0x40
};
static unsigned short c_wTableCRC1[256] = 
{
	0x0000,0xc0c1,0xc181,0x0140,0xc301,0x03c0,0x0280,0xc241,
	0xc601,0x06c0,0x0780,0xc741,0x0500,0xc5c1,0xc481,0x0440,
	0xcc01,0x0cc0,0x0d80,0xcd41,0x0f00,0xcfc1,0xce81,0x0e40,
	0x0a00,0xcac1,0xcb81,0x0b40,0xc901,0x09c0,0x0880,0xc841,
	0xd801,0x18c0,0x1980,0xd941,0x1b00,0xdbc1,0xda81,0x1a40,
	0x1e00,0xdec1,0xdf81,0x1f40,0xdd01,0x1dc0,0x1c80,0xdc41,
	0x1400,0xd4c1,0xd581,0x1540,0xd701,0x17c0,0x1680,0xd641,
	0xd201,0x12c0,0x1380,0xd341,0x1100,0xd1c1,0xd081,0x1040,
	0xf001,0x30c0,0x3180,0xf141,0x3300,0xf3c1,0xf281,0x3240,
	0x3600,0xf6c1,0xf781,0x3740,0xf501,0x35c0,0x3480,0xf441,
	0x3c00,0xfcc1,0xfd81,0x3d40,0xff01,0x3fc0,0x3e80,0xfe41,
	0xfa01,0x3ac0,0x3b80,0xfb41,0x3900,0xf9c1,0xf881,0x3840,
	0x2800,0xe8c1,0xe981,0x2940,0xeb01,0x2bc0,0x2a80,0xea41,
	0xee01,0x2ec0,0x2f80,0xef41,0x2d00,0xedc1,0xec81,0x2c40,
	0xe401,0x24c0,0x2580,0xe541,0x2700,0xe7c1,0xe681,0x2640,
	0x2200,0xe2c1,0xe381,0x2340,0xe101,0x21c0,0x2080,0xe041,
	0xa001,0x60c0,0x6180,0xa141,0x6300,0xa3c1,0xa281,0x6240,
	0x6600,0xa6c1,0xa781,0x6740,0xa501,0x65c0,0x6480,0xa441,
	0x6c00,0xacc1,0xad81,0x6d40,0xaf01,0x6fc0,0x6e80,0xae41,
	0xaa01,0x6ac0,0x6b80,0xab41,0x6900,0xa9c1,0xa881,0x6840,
	0x7800,0xb8c1,0xb981,0x7940,0xbb01,0x7bc0,0x7a80,0xba41,
	0xbe01,0x7ec0,0x7f80,0xbf41,0x7d00,0xbdc1,0xbc81,0x7c40,
	0xb401,0x74c0,0x7580,0xb541,0x7700,0xb7c1,0xb681,0x7640,
	0x7200,0xb2c1,0xb381,0x7340,0xb101,0x71c0,0x7080,0xb041,
	0x5000,0x90c1,0x9181,0x5140,0x9301,0x53c0,0x5280,0x9241,
	0x9601,0x56c0,0x5780,0x9741,0x5500,0x95c1,0x9481,0x5440,
	0x9c01,0x5cc0,0x5d80,0x9d41,0x5f00,0x9fc1,0x9e81,0x5e40,
	0x5a00,0x9ac1,0x9b81,0x5b40,0x9901,0x59c0,0x5880,0x9841,
	0x8801,0x48c0,0x4980,0x8941,0x4b00,0x8bc1,0x8a81,0x4a40,
	0x4e00,0x8ec1,0x8f81,0x4f40,0x8d01,0x4dc0,0x4c80,0x8c41,
	0x4400,0x84c1,0x8581,0x4540,0x8701,0x47c0,0x4680,0x8641,
	0x8201,0x42c0,0x4380,0x8341,0x4100,0x81c1,0x8081,0x4040
};

const BYTE CRC8_TABLE[] =
{
0x00,0x07,0x0E,0x09,0x1C,0x1B,0x12,0x15,0x38,0x3F,
0x36,0x31,0x24,0x23,0x2A,0x2D,0x70,0x77,0x7E,0x79,
0x6C,0x6B,0x62,0x65,0x48,0x4F,0x46,0x41,0x54,0x53,
0x5A,0x5D,0xE0,0xE7,0xEE,0xE9,0xFC,0xFB,0xF2,0xF5,
0xD8,0xDF,0xD6,0xD1,0xC4,0xC3,0xCA,0xCD,0x90,0x97,
0x9E,0x99,0x8C,0x8B,0x82,0x85,0xA8,0xAF,0xA6,0xA1,
0xB4,0xB3,0xBA,0xBD,0xC7,0xC0,0xC9,0xCE,0xDB,0xDC,
0xD5,0xD2,0xFF,0xF8,0xF1,0xF6,0xE3,0xE4,0xED,0xEA,
0xB7,0xB0,0xB9,0xBE,0xAB,0xAC,0xA5,0xA2,0x8F,0x88,
0x81,0x86,0x93,0x94,0x9D,0x9A,0x27,0x20,0x29,0x2E,
0x3B,0x3C,0x35,0x32,0x1F,0x18,0x11,0x16,0x03,0x04,
0x0D,0x0A,0x57,0x50,0x59,0x5E,0x4B,0x4C,0x45,0x42,
0x6F,0x68,0x61,0x66,0x73,0x74,0x7D,0x7A,0x89,0x8E,
0x87,0x80,0x95,0x92,0x9B,0x9C,0xB1,0xB6,0xBF,0xB8,
0xAD,0xAA,0xA3,0xA4,0xF9,0xFE,0xF7,0xF0,0xE5,0xE2,
0xEB,0xEC,0xC1,0xC6,0xCF,0xC8,0xDD,0xDA,0xD3,0xD4,
0x69,0x6E,0x67,0x60,0x75,0x72,0x7B,0x7C,0x51,0x56,
0x5F,0x58,0x4D,0x4A,0x43,0x44,0x19,0x1E,0x17,0x10,
0x05,0x02,0x0B,0x0C,0x21,0x26,0x2F,0x28,0x3D,0x3A,
0x33,0x34,0x4E,0x49,0x40,0x47,0x52,0x55,0x5C,0x5B,
0x76,0x71,0x78,0x7F,0x6A,0x6D,0x64,0x63,0x3E,0x39,
0x30,0x37,0x22,0x25,0x2C,0x2B,0x06,0x01,0x08,0x0F,
0x1A,0x1D,0x14,0x13,0xAE,0xA9,0xA0,0xA7,0xB2,0xB5,
0xBC,0xBB,0x96,0x91,0x98,0x9F,0x8A,0x8D,0x84,0x83,
0xDE,0xD9,0xD0,0xD7,0xC2,0xC5,0xCC,0xCB,0xE6,0xE1,
0xE8,0xEF,0xFA,0xFD,0xF4,0xF3
};

typedef union byteAndUShort
{
	BYTE by[2];
	unsigned short s;
}BAUS;
typedef union byteAndShort
{
	BYTE by[2];
    short s;
}BAS;


// CXiaoBiLiDlg 对话框
class CXiaoBiLiDlg : public CDialogEx
{
// 构造
public:
	CXiaoBiLiDlg(CWnd* pParent = NULL);	// 标准构造函数
	~CXiaoBiLiDlg();
// 对话框数据
	enum { IDD = IDD_XIAOBILI_DIALOG };

	protected:
	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV 支持
public:
	int flag_net_uwmu_awmu;
	int flag_wxd_net_uwmu_awmu; //无线电切无线网，无线网连接连接次数
	BYTE fault_flag_r305_last;
	BYTE fault_flag_r305_curr;
	Cpage0* page_config_sxzk;
	Cpage1* page1;
	CPage_cspz_yj* page_cspz_yj;
	CPage_cspz_yj_2* page_cspz_yj_2;
	Cpage_cspz_yj_3* page_cspz_yj_3;
	Cpage2* page2;
	Cpage3* page3;
	CPage4* page4;
	CPage_SCH* page_sch;
	CPage_nau_config* page_nau_config;
	CPage_test* page_test;
	CPage_ljdd* page_ljdd;
	CPage_ljdd* page_wxwdk;
	CPage_ljdd* page_wxwdk_wxddk;
	CPage_ljdd* page_sch_txzt;
	//CPag_Password* page_password;
	Cpage_config_ydgh* page_config_ydgh;
	CListenSocket* m_pListenSocket;
	CSessionSocket* SSCCSocket;
	CSessionSocket* SSYJSocket;
	CSessionSocket* SSJCKZSocket;
	AWMU_AWRU_S02 *pdata_s02;
	S_UWMU_2_AWMU_EP *pdata_r30;
	struct Data_SCH_R10 *pdata_r10;
	AWRU_AWMU_R20 *pdata_r20;
	AWRU_AWMU_R201 *pdata_r201;
	S_UWMU_2_AWMU_EA *pdata_r301;
	S_AWMU_2_UWMU_EA1 *pdata_s034;
	S_UWMU_2_AWMU_EA1 *pdata_r304;
	S_UWMU_2_AWMU_SP *pdata_r303;
	S_UWMU_2_AWMU_SP *pdata_s021;
	S_EMU_2_AWMU_SP *pdata_r70e;
	S_EMU_2_AWMU_SP1 *pdata_r701e;
	S_EMU_2_AWMU_SP2 *pdata_r702e;
	S_EMU_2_AWMU_SP3 *pdata_r703e;
	S_AWMU_2_UWMU_ESP *pdata_s03;
	S_AWMU_2_UWMU_EA_1 *pdata_s031_1,*pdata_s027_1;
	S_AWMU_2_UWMU_EA_2 *pdata_s031_2,*pdata_s031_3,*pdata_s031_4,*pdata_s027_2,*pdata_s027_3,*pdata_s027_4;
	S_AWMU_2_EMU_EP *pdata_s07;
	S_AWMU_2_EMU_SA *pdata_s07e;
	S_EMU_2_AWMU_EP *pdata_r70;
	S_UWMU_2_AWMU_EA3 *pdata_r306;
	S_AWMU_2_UWMU_EA4 *pdata_s0307;   //20170427新增
	S_UWMU_2_AWMU_EA4 *pdata_r3007;   //20170427新增
	S_UWMU_2_AWMU_EA5 *pdata_s3008;   //20170506新增
	S_AWMU_2_UWMU_EA5 *pdata_r0308;   //20170506新增
	AWMU_2_EMU_EA_TIMESET *pdata_s0702;  //20170428新增
	EMU_2_AWMU_EA_TIMESET *pdata_r7002;  //20170428新增
	AWMU_AWRU_S028  *pdata_s0208;       //20170429新增
	AWMU_AWRU_S029  *pdata_s0209;       //20170817新增
	AWRU_AWMU_R208  *pdata_r2008; 
	S_UWMU_2_DSU_EP *pdata_r305;
	AWMU_AWRU_S022 *pdata_s022;
	AWMU_AWRU_S023 *pdata_s023;
	AWRU_AWMU_S024 *pdata_s024;
	AWRU_AWMU_S025 *pdata_s025;
	AWRU_AWMU_S026 *pdata_s026;
	AWMU_2_EMU_EA_PARAM_CONFIG *pdata_0701;
	GPSData *pdata_gps;
	USBLData *pdata_usbl;
	CByteArray arraySend_s01;
	CByteArray arraySend_s07e;
	CByteArray arraySend_s03;
	CByteArray arraySend_s034_wxd;
	CByteArray arraySend_s0308;  //20170506新增
	BYTE* sendata_s02;
	BYTE* sendata_s021;
	BYTE* sendata_s022;
	BYTE* sendata_s023;
	BYTE* sendata_s024;
	BYTE* sendata_s025;
	BYTE* sendata_s026;
	BYTE* sendata_s03;
	BYTE* recdata_r10;
	BYTE* recdata_r30;
	BYTE* recdata_r303;
	BYTE* sendata_s034;
	BYTE* recdata_r304;
	BYTE* recdata_r10_wx;
	BYTE* sendata_s01;
	BYTE *sendata_s031_1,*sendata_s027_1;
	BYTE *sendata_s031_2,*sendata_s031_3,*sendata_s031_4,*sendata_s027_2,*sendata_s027_3,*sendata_s027_4;
	BYTE *recdata_r301;
	BYTE *sendata_s07;
	BYTE *sendata_0701;
	BYTE *sendata_0307;
	BYTE *sendata_0702;
	BYTE *sendata_0208;
	BYTE *sendata_0209;
//	BYTE *sendata_0308;    //20170506新增
// 实现
protected:
	HICON m_hIcon;

	// 生成的消息映射函数
	virtual BOOL OnInitDialog();
	afx_msg void OnSysCommand(UINT nID, LPARAM lParam);
	afx_msg void OnPaint();
	afx_msg HCURSOR OnQueryDragIcon();
	DECLARE_MESSAGE_MAP()
public:
	CTabCtrl m_Tab;
	afx_msg void OnTcnSelchangeTab1(NMHDR *pNMHDR, LRESULT *pResult);
	void OnAccept();
public:
	void Init_s01();
	void CommInit_SCH();
	void CommInit_GPS();
	void CommInit_WXD();
	void CommInit_USBL();
	void CommInit_SSTX();
	void ServerStart();
	void ProcData_SX_R30(BYTE* lbuff);
	void ProcData_CC_R20(BYTE *lbuff);
	void ProcData_CC_R201(BYTE *lbuff);
	void ProcData_R10(BYTE* recdata);
	void ProcData_SX_R303();
	void ProcData_SX_R308();   //20170506新增
	void ProcData_FAULT_R30();
	void ProcData_FAULT_R303();
	void ProcData_FAULT_R305();
	void ProcData_YJ_R70();
	void ProcData_YJ_R70E();
	void FuZhi_CC_S02();
	void FuZhi_SX_S03(BYTE* recdata);
	void FuZhi_SCH_S01_R30();
	void FuZhi_SCH_S01_R70();
	void FuZhi_SCH_S01_R305();
	void FuZhi_SCH_S01_R304();
	void FuZhi_SCH_S01_R303();
	void FuZhi_SCH_S01_R70E();
	void FuZhi_SCH_S01_TXZT();
	void FuZhi_SX_S031(UINT len1,UINT len2,UINT len3,char rwlx,unsigned char speed);
	void FuZhi_SX_S034(BYTE* recdata);
	void FuZhi_SX_S038();
	void FuZhi_YJ_S07E(BYTE* recdata);
	void FuZhi_CC_S021();
	void FuZhi_CC_S022();
	void FuZhi_CC_S023();
	void FuZhi_CC_S024();
	void FuZhi_CC_S025(BYTE* recdata);
	void FuZhi_CC_S026();
	void FuZhi_CC_S027();
	void FuZhi_CC_S029(BYTE *recdata);
	void FuZhi_CC_S029_AWMU(char tx_flag);
	void FuZhi_YJ_S07(BYTE* recdata);
	void FuZhi_EMU_0701();
	void QingLing_SCH_S01();
	void QingLing_SX_S03();
	void QingLing_YJ_S07E();
	void QingLing_SCH_R10();
	void ChangeTimer_S03();
	void SetTimer1();
	CMscomm1 m_CtrlComm1;
	DECLARE_EVENTSINK_MAP()
	void OnCommMscomm1();
public:
	CSessionSocket* SSSXSocket;
	CSessionSocket* SCHSocket;
	shortAndByte zqtj;     //该变量用于解析手操盒数据包R_10
	shortAndByte tjqzs;
	shortAndByte wkddj;
	shortAndByte fxddj;
	shortAndByte zwddj;
	shortAndByte ywddj;
	CMscomm1 m_CtrlComm2;
	void OnCommMscomm2();
	BYTE moshi_last;
	BYTE moshi_curr;
	BYTE gongkuang_last;
	BYTE gongkuang_curr;
	BYTE zijian_last;
	BYTE zijian_curr;
	BYTE yjcs_last;
	BYTE yjcs_curr;
	BYTE tx_sch_wl_flag;
	BYTE tx_sch_ck_flag;
	BYTE tx_yj_ck_flag;
	BYTE tx_yj_wxd_ck_flag;
	BYTE tx_sx_wxd_flag;
	BYTE gps_data_num;
	BYTE gps_timeflag;
	CMscomm1 m_CtrlComm3;
	void OnCommMscomm3();
	void CRC_Check(char *Data,unsigned char DataLen,unsigned char *CRCHi,unsigned char *CRCLo);
	unsigned short CRC16(unsigned char* puchMsg, unsigned short usDataLen);
	unsigned short CalculateSendCRC(unsigned char* sDat,unsigned short sLength);
	BYTE compute_crc8(BYTE* buffer, unsigned short len);
public:
	afx_msg void OnTimer(UINT_PTR nIDEvent);
	afx_msg void OnBnClickedButton2();
	float** pt1;
	float** pt2;
	float** pt3;
	float** pt;
	bool rwyz_fs_flag[4];   //任务预置信息是否发送成功
	int tx_sx_num;          //判断水上水下通信是否断开
	bool stop_remote_cmd;   // 遥控切自主指令下发后，在网络和无线电定时器中停止下发周期性的遥控调度报文；自主切遥控指令下发后，允许下发周期性的遥控调度报文。20180310
	CMscomm1 m_CtrlComm4;
	void OnCommMscomm4();
public:
	void DataWrite_SWSJ();
	bool fault_flag_r30_curr;
	bool fault_flag_r30_last;
	bool fault_flag_r70_curr;
	bool fault_flag_r70_last;
	bool fault_flag_r70e_curr;
	bool fault_flag_r70e_last;
	bool fault_flag_r3008_curr;  //20170506
	bool fault_flag_r3008_last;
	bool fault_flag_r303_curr;   //20170507
	bool fault_flag_r303_last;
	BYTE usbl_data_num;
	void OnCommMscomm5();
	CMscomm1 m_CtrlComm5;
public:
	void AWMU_UWMU_W_ReConnect();
	void AWMU_EMU_W_ReConnect();
	void Connect_UWMU();
	void Connect_EMU();
	void LimitSpeed();
	void RudderCtr();
	void FuZhi_70e(int i);
	void Fuzhu_Test_Show();
	afx_msg void OnClose();
	ofstream file;
	ofstream filewxd;
void ErroSwitch(int erro);
    unsigned int wxd_send;
	unsigned int wxd_recv;
	unsigned int wxd_error;
short SpeedCtr(short r_SC,short r_SN,short r_SO);
short Speed_out;
	/*void SetTimer18();
	void KillTimer18();*/
CRwyzDlg* page_rwyz;
void Auto_timer_start();
void Auto_timer_end();
void KillTimer_19();
void SetTimer_1();
BYTE recdata[1024];//无线电报文接收数组
LONG k;  //无线电报文中用于报文接收字节计数20180730
};
	